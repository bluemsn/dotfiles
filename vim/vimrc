" Basic Stuff {{{1

set nocompatible " Forget about being compatible with good ol' Vi
set hidden " Make sure that unsaved buffers that are to be put in the
           " background are allowed to go in there.
set ttyfast " Indicates a faster terminal connection

" Search & Matching {{{1

set wrapscan    " Set the search scan to wrap around to the top of the file
set ignorecase  " Set search scan to ignore case when search is all lowercase
set smartcase   " But recognize uppercase if it is specified
set visualbell  " Set to use visual bell --  the beeping sucks!
set errorbells  " Enable use of (visual) error bells
set incsearch   " Show results of search scan as it finds them
set showmatch   " Always show matching bracket, quote etc.
set matchtime=5 " Tenths of a second to show the matching bracket, quote etc.
set hlsearch    " Enable the highlighting of the search
set showcmd     " Show the current command in the lower right corner
set magic       " Allow use of regular expressions in the search scans

" Spell Checking {{{1

set spell        " Enable spell checking
set spelllang=en " Set the language of spell checking to English

" Command Input Related {{{1

set ch=2       " Make the command input line two lines high
set shellslash " Set to use forward slash, in case you're in Windows

" Formatting {{{1

set tabstop=4     " Number of spaces that defines a "tab"
set shiftwidth=4  " Number of spaces to use for each indent level
set softtabstop=4 " Same as 'tabstop', while doing editing operations
set backspace=indent,eol,start " Allow backspace over everything in insert mode
set smartindent " Do smart indenting when starting a new line
set autoindent  " Copy indent from current line, over to the new line

" Commands Options {{{1

set cpoptions=ces$  " Make the 'cw' and like commands put a $ at the end of the
                    " word instead of just deleting and replacing the text
set timeoutlen=1000 " Set delay between commands, in milliseconds

" History {{{1

set history=100 " Keep only 100 entries in the command history
set nobackup    " Disable backup files
set noswapfile  " Don't use a swap file in current buffer

" Folds {{{1

set foldenable " Make sure folding is enabled
" These commands open folds
set foldopen=block,insert,jump,mark,percent,quickfix,search,tag,undo
set foldmethod=marker " Use manual markers for folds

" Keymappings Stuff {{{1

" Set leader to ',', instead of '/'
let mapleader = ','
let g:mapleader = ','

" Set my local leader to '\'
let maplocalleader = '\\'

" Map CTRL-E to do what ',' used to do
nnoremap <c-e> ,
vnoremap <c-e> ,

" Let's make it easy to edit this file, use ',eev' to open this file, and ',ev'
" for opening it in a split window
nnoremap <silent> <leader>eev :e $MYVIMRC<cr>
nnoremap <silent> <leader>ev :sp $MYVIMRC<cr>

" And to source this file as well, use ',sv' to source this file
nnoremap <silent> <leader>sv :so $MYVIMRC<cr>

" Completely disable the use of the arrow keys in command mode
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>

" And in visual mode
vnoremap <up> <nop>
vnoremap <down> <nop>
vnoremap <left> <nop>
vnoremap <right> <nop>

" Fix moving line by line in the paragraph, when soft wrap is on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

" Smart way to move between windows, uses 'Ctrl+jkhl' instead of 'Ctrl+w+jkhl'
nnoremap <c-j> <c-W>j
nnoremap <c-k> <c-W>k
nnoremap <c-h> <c-W>h
nnoremap <c-l> <c-W>l

" Disable pressing 'F1' for help
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" Makes it easy to clear out a search, by typing ', '
nnoremap <leader><space> :noh<cr>

" Allow change of theme from light to dark and vice-versa, with a hotkey
call togglebg#map('<F5>')

" Visual mode pressing * or # searches for the current selection, forward and
" backwards respectively
vnoremap <silent> * :call VisualSelection('f')<cr>
vnoremap <silent> # :call VisualSelection('b')<cr>

" Change current WORD in normal mode to UPPERCASE letters using ',U'
nnoremap <leader>U viwU<esc>

" And the same to lowercase using ',u'
nnoremap <leader>u viwu<esc>

" Abbreviations {{{1

" Set abbreviations for all my emails
iabbrev el@@ eduanlavaque@gmail.com
iabbrev es@@ eduan@snapsimpletech.com
iabbrev ew@@ eduan@websharks-inc.com

" Put a copyright notice when I write 'ccopy' in insert mode
iabbrev ccopy Copyright (C) 2012 Eduan Lavaque <eduan@snapsimpletech.com>, all rights reserved.

" Vundle & Other Extensions {{{1

" Set the filetype stuff to off
filetype off
filetype plugin indent off

" Add Vundle to the list of auto-loading things
set rtp+=~/.vim/bundle/vundle/

" Call Vundle function...
call vundle#rc()

" This one is required baby!
Bundle 'gmarik/vundle'

" All of my Vundle bundles
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'mattn/zencoding-vim'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-markdown'
Bundle 'tpope/vim-repeat'
Bundle 'tpope/vim-surround'
Bundle 'spf13/PIV'
Bundle 'vim-scripts/YankRing.vim'
Bundle 'jeffkreeftmeijer/vim-numbertoggle'
Bundle 'PotHix/Vimpress'
Bundle 'nathanaelkane/vim-indent-guides'
" Color schemes
Bundle 'altercation/vim-colors-solarized'

" Set the filetype stuff to on
filetype on
filetype plugin indent on

" Bundle settings {{{2

" Vim Indent Guides {{{3
let g:indent_guides_guide_size=1
let g:indent_guides_enable_on_vim_startup=1
au VimEnter * :IndentGuidesEnable
" }}}3

" }}}2

" User Interface Related {{{1

" Show hidden characters, specifically tabs and EOLs
set list
set listchars=tab:▸\ ,eol:¬

" Put a marker in this array of column numbers
set colorcolumn=79

" Always be 4 chars wide, the line number column that is
set numberwidth=4

" Set transparency to window, only if in MacVim
if has('gui_running')
	set transparency=0
endif

" Change the Terminal's title
set title

" Set the formatoptions
set fo=vt

" NOTICE!
" Line numbers and stuff are controlled by this bundle:
" https://github.com/jeffkreeftmeijer/vim-numbertoggle

" Status line {{{2

" The lines below set up the left side of the thing, it basically shows all of
" the files info, name, path, buffer, encoding, file type etc.
let &stl='%< [Buf: %n]%m %f ['
let &stl.='%{empty(&filetype) ? "" : &filetype . ", "}'
let &stl.='%{(&fenc!=""?&fenc:&enc)}] %{fugitive#statusline()}'

" The line below sets up the right side of the thing, it shows all the non-
" file specific info. It shows mostly the cursors info
let &stl.='%=[0x%02.2B] [Line: %04l/%04L | Col: %c%V] (%P)'

" Tell Vim to always put a status line in, even if there is only one window
set laststatus=2

" }}}2
" Cursor & Mouse {{{2

" When the page starts to scroll, keep the cursor 8 lines from the top and
" from the bottom
set scrolloff=4

" Allow the cursor to go to "invalid" places
set virtualedit=all

" Highlight the cursors current line
set cursorline

" And current column
set cursorcolumn

" Hide the mouse pointer while typing
set mousehide

" Disable mouse use
set mouse=

" Set up the GUI cursor to look nice
set guicursor=n-v-c:block-Cursor-blinkon0,ve:ver35-Cursor,o:hor50-Cursor,i-ci:ver25-Cursor,r-cr:hor20-Cursor,sm:block-Cursor-blinkwait175-blinkoff150-blinkon175

" Windows/Split-windows {{{2

" Get rid of the silly characters in window separators
set fillchars=""

" Automatically save the file you were on, when switching between buffers
set autowrite

" Set to auto read when a file is changed from the outside
set autoread

" Don't use any tabs (visual tabs of course, duh!)
set tabpagemax=1
set showtabline=0

" Switch to tab or window if already open, when switching buffers
set switchbuf=useopen,usetab

" Set the GUI options the way I like
set guioptions=acirbhv

" Setup window colors and size, if in GUI mode
if has('gui_running')
	set guifont=Menlo:h11 " Set the font
	set t_Co=256 " Set the GUI to use 256 colors

	if !exists('g:vimrcloaded')
		winpos 0 0
		if ! $diff
			set columns=120 lines=40
		else
			set columns=240 lines=40
		endif
		let g:vimrcloaded=1
	endif

	if has('gui_macvim')
		macmenu File.Save key=<nop>
		macmenu File.Save\ All key=<nop>
		macmenu File.Save\ As\.\.\. key=<nop>
	endif
endif
:nohls


" Syntax Highlighting {{{2

" Syntax coloring lines that are too long just slow down the world
set synmaxcol=2048

" Turn on that syntax highlighting
if &t_Co > 2 || has('gui_running')
	" Switch syntax highlighting on, when the Terminal has colors
	" Or when the GUI is being used
	syntax on
endif

" Solarized settings {{{3

" Make Solarized use 256 colors
let g:solarized_termcolors=256

" Non-text items visibility, normal low or high
let g:solarized_visibility="low"

" Show trailing white spaces
let g:solarized_hitrail=1

" Disable the Solarized menu
let g:solarized_menu=0

" }}}3

" Set the color scheme to use dark version
set background=dark

" Set the color scheme
colorscheme solarized

" }}}2

" Diff {{{1

" Add ignorance of whitespace to diff
set diffopt+=iwhite

" Auto-completion {{{1

" Enable auto-completion of commands
set wildmenu
set wildmode=list:longest

" Same as default except that I remove the 'u' option
set complete=.,w,b,t

" When completing by tag, show the whole tag, not just the function name
set showfulltag

" Macros {{{1

" Don't update the display while executing macros
set lazyredraw

" File {{{1

" Disable encryption file and buffer encryption
set key=

" Set the default encoding to UTF-8
set encoding=utf-8

" Set Unix as the standard file type
set ffs=unix,dos,mac
